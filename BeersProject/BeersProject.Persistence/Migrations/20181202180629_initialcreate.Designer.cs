// <auto-generated />
using System;
using BeersProject.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeersProject.Persistence.Migrations
{
    [DbContext(typeof(BeersProjectDbContext))]
    [Migration("20181202180629_initialcreate")]
    partial class initialcreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("BeersProject.Domain.Entities.Beer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal?>("Abv");

                    b.Property<long>("BreweryId");

                    b.Property<string>("Ibu");

                    b.Property<string>("Name");

                    b.Property<decimal?>("Ounces");

                    b.Property<string>("Style");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId");

                    b.ToTable("Beer");
                });

            modelBuilder.Entity("BeersProject.Domain.Entities.BeerRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("BeerId");

                    b.Property<string>("Comment");

                    b.Property<decimal?>("Rating");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BeerId");

                    b.HasIndex("UserId");

                    b.ToTable("BeerRating");
                });

            modelBuilder.Entity("BeersProject.Domain.Entities.Brewery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.ToTable("Brewery");
                });

            modelBuilder.Entity("BeersProject.Domain.Entities.BreweryRating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("BreweryId");

                    b.Property<string>("Comment");

                    b.Property<decimal?>("Rating");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId");

                    b.HasIndex("UserId");

                    b.ToTable("BreweryRating");
                });

            modelBuilder.Entity("BeersProject.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BeersProject.Domain.Entities.Beer", b =>
                {
                    b.HasOne("BeersProject.Domain.Entities.Brewery", "Brewery")
                        .WithMany("Beer")
                        .HasForeignKey("BreweryId")
                        .HasConstraintName("fk_brewery_id");
                });

            modelBuilder.Entity("BeersProject.Domain.Entities.BeerRating", b =>
                {
                    b.HasOne("BeersProject.Domain.Entities.Beer", "Beer")
                        .WithMany("BeerRating")
                        .HasForeignKey("BeerId")
                        .HasConstraintName("fk_beer_id");

                    b.HasOne("BeersProject.Domain.Entities.User", "User")
                        .WithMany("BeerRating")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_id");
                });

            modelBuilder.Entity("BeersProject.Domain.Entities.BreweryRating", b =>
                {
                    b.HasOne("BeersProject.Domain.Entities.Brewery", "Brewery")
                        .WithMany("BreweryRating")
                        .HasForeignKey("BreweryId")
                        .HasConstraintName("fk_brewery_rating_brewery");

                    b.HasOne("BeersProject.Domain.Entities.User", "User")
                        .WithMany("BreweryRating")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_brewery_rating_user");
                });
#pragma warning restore 612, 618
        }
    }
}
